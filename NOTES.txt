
Dockerized setup:

0. Make sure you have docker, make, and CUDA drivers installed (for
running on a GPU), and that your user is part of the 'docker' group.

1. Check the configuration options in the Makefile, especially
mounting the data disk and GPU options.  If you are going to use
something else than data-65 from the plankton set, you may have to
edit src/config.py as well.

2. make train

3. make test

Instructions for non-dockerized setup

0. Install necessary software:

   pip install keras
   pip install tensorflow=1.5 (our CPU doesn't support AVX instructions)

Or on newer CPUs:

   install CUDA.9.0 -- this messed up everything, and I had to
                       reinstall the kernel module.
   pip install keras tensorflow-gpu
   
1. Use imagemagick to rescale all images. Images smaller than 299x299
are centered on a white background, larger images are scaled down to
fit.  This preserves size for small images.

  (script: convert-images-sh)

2. Select classes to learn (more than xxx objects)

Split into random subsets, 100 validate, 100 test, rest in train

  (script: prepare-data.sh)
  parallel echo {} \| bash prepare-data.sh ::: $(ls data)

3. Run training

  (train.py)

4. Test performance

a) confusion matrix
b) error examples


